apply plugin: 'com.github.lanchon.dexpatcher.patched-application'

dependencies {
    sourceApk fileTree(dir: '../apk', include: ['*.apk', '*.jar', '*.zip'])
}

dexpatcherConfig {
    //dir = '~/android/dexpatcher/dexpatcher-gradle-tools'

    // Plugin-Specific Configuration
    patchedApplication {
        printAppInfo = true;
        importSymbols = false;
    }

    apktool {
    }

    dexpatcher {
        verbosity = VERBOSE
    }
}

android {
    compileSdkVersion 21
    //buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId 'makeinfo.com.getid'

        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName '1.0'
    }

    lintOptions {
        disableLintTasks true
        //checkReleaseBuilds false
    }
}

// Please note that in Android Studio you may need to invoke 'Build/Clean Project'
// to solve Gradle sync issues when using project dependencies.

// Android Gradle plugin 3.3.2 has a bug that causes Android libraries to be imported in the
// wrong order if some libraries are provided as project dependencies and others as local files.
// This causes manifest and resource merging conflict resolution issues. The following code works
// around this bug by presenting the required project dependency as a file dependency.
// (See: https://issuetracker.google.com/issues/130463010)
def aarOrderBugWorkaround = true
if (aarOrderBugWorkaround) {
    // For each build type, get the project dependency from the corresponding builder task.
    android.buildTypes.all {
        def bundleAar = tasks.getByPath(":patch:bundle${com.android.utils.StringHelper.capitalize(it.name)}Aar")
        dependencies.add "${it.name}Implementation", files(bundleAar.archivePath) {
            builtBy bundleAar
        }
    }
    // Then manually bring in the transitive dependencies of the project dependency.
    dependencies {
        implementation('ru.bartwell:exfilepicker:1.8') {
            exclude module: 'support-v4'
        }
    }
} else {
    dependencies {
        // Bring in the patch project and its dependencies.
        implementation project(':patch')
    }
}

void disableLintTasks(boolean disableTasks) {
    if (disableTasks) {
        tasks.withType(com.android.build.gradle.tasks.LintBaseTask).configureEach {
            enabled = false
        }
    }
}
